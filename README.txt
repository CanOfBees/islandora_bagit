README.txt for the Islandora BagIt module
=========================================

Introduction
============

BagIt (https://wiki.ucop.edu/display/Curation/BagIt) is a specification for
packaging content and metadata about that content into a format that can be
shared between applications. This module provides a "Create Bag" option that 
allows the packaging of the datastreams in Islandora (http://islandora.ca/)
objects. This module is a fork of https://drupal.org/project/bagit.

Installation
============

This module uses the Scholars' Lab BagItPHP library, found at
https://github.com/scholarslab/BagItPHP, which is integrated with the
Islandora BagIt module using the Drupal Libraries API. The library has one 
PHP dependency, http://pear.php.net/package/Archive_Tar.

To install the Islandora BagIt module:

1) Install http://pear.php.net/package/Archive_Tar. This package is required by
   PEAR so if you have PEAR installed on your system, you won't need to install
   Archive_Tar separately.
2) Install the Libraries API contrib module (http://drupal.org/project/libraries).
3) Unzip this module into your site's modules directory as you would any other
   contrib module.
4) Install the BagItPHP library by entering your site's sites/all/libraries
   directory and issuing the following command:

   git clone git://github.com/scholarslab/BagItPHP.git

5) Enable the Libraries and Islandora BagIt modules like you would any other 
   contrib modules.
6) Configure the Islandora BagIt module by going to admin/islandora/bagit.
7) Configure user permissions like you would for any other contrib module.

Extending and customizing the BagIt module
==========================================

The files that are added to an Islandora object's Bag are managed by plugins. Plugins
1) define the source path for datastream files and their destination paths in the Bag
relative to the Bag's 'data' directory, and 2) optionally, rename datastream files or
create new files for inclusion in the Bag.

The module comes with three plugins, one that copies all the datastreams in an
Islandora object in the top level of the Bag's 'data' directory, one that creates
an Archivematica (http://archivematica.org) transfer Bag, and one that illustrates
how to create an additional file to add to the Bag.

If you have requirements not covered by the supplied plugins, you can use the plugins 
described above to base your own on. If you write your own plugins, follow these 
guidelines:

a) Begin plugin filenames with 'plugin_' and end in '.inc'.
b) Every plugin has a function that is named the same as the filename
   prepended with 'islandora_bagit_', ending in '_init().' All init functions 
   take $islandora_object and $tmp_ds_directory parameters.
c) Plugins must complete all file writing and copying tasks before they return
   the file's source and destination paths to the Bagit module (in the case of
   datastream copy plugins).
d) Plugins return FALSE if there is an error in copying or writing files.
  

Modifying a Bag from your own modules
=====================================

This module provides a drupal_alter() hook, which allows other modules to use
hook_islandora_bagit_alter($bag, $islandora_object). Your module can modify the current
Bag using any of the methods provided by the BagItPHP library. Each implementation
of this hook must take $bag and $islandora_object as parameters; $islandora_object
is provided so you can access properties of the object in your module easily. A
typical implementation looks like this:

/**
 * Implementation of hook drupal_alter().
 *
 * @param object $bag
 *   A BagIt object instantiated in the BagIt module.
 *
 * @param object $islandora_object
 *  The current $islandora_object.
 */
function mymodule_islandora_bagit_alter($bag, $islandora_object) {
  // Add some custom metadata to bag-info.txt.
  $bag->bagInfoData('Some-Arbitrary-Field', 'Foo bar baz');
  // Add a file that is not managed by a plugin.
  $bag->addFile('/path/to/file.txt', 'myfile.txt');
  // Update the Bag (this is required).
  $bag->update();
}

Note that implementations of hook_islandora_bagit_alter() must call
$bag->update() themselves, typically at the very end of the function.
Also note that if Payload-Oxum values generated by the Islandora BagIt
module will be incorrect if payload files are added by this drupal_alter()
hook.

Permissions and security
========================

This module is intended for users who have a fairly high level of permissions
on a Drupal site. Because the goal is to package up all or some of the datastreams
in an Islandora object, users who can create and download Bags should have access
to those datastreams. 

Do not grant permission to create Bags to users who should not view all of the
datastreams in Islandora objects.

Author/maintainer
=================

Mark Jordan <mjordan at sfu dot ca>

License
=======

Islandora BagIt is released under the GNU AFFERO GENERAL PUBLIC LICENSE, version 3.
See LICENSE.txt for more information.
